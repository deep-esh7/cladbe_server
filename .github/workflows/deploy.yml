name: Deploy to Server

on:
  push:
    branches: [main]

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - name: Setup SSH
        env:
          SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}
        run: |
          mkdir -p ~/.ssh
          echo "$SSH_PRIVATE_KEY" > ~/.ssh/github_deploy
          chmod 600 ~/.ssh/github_deploy
          ssh-keyscan -H 80.65.208.176 >> ~/.ssh/known_hosts

      - name: Copy ENV file
        env:
          ENV_VARS: ${{ secrets.ENV_VARS }}
        run: |
          echo "$ENV_VARS" > .env
          scp -i ~/.ssh/github_deploy .env root@80.65.208.176:/root/cladbe_server/.env

      - name: Deploy
        run: |
          ssh -i ~/.ssh/github_deploy root@80.65.208.176 'bash -s' << 'ENDSSH'
            cd /root/cladbe_server
            
            echo "Pulling latest changes..."
            git pull origin main
            
            echo "Installing dependencies..."
            npm install --production
            
            echo "Stopping PM2..."
            pm2 kill || true
            rm -rf ~/.pm2
            
            # Temporarily enable logging for debug
            sed -i 's/"\/dev\/null"/".\/logs\/pm2.error.log"/g' ecosystem.config.js
            sed -i 's/"\/dev\/null"/".\/logs\/pm2.out.log"/g' ecosystem.config.js
            
            mkdir -p logs
            
            echo "Starting single instance first..."
            # Start with single instance for testing
            PM2_SILENT=true pm2 start ecosystem.config.js --env production --instances 1
            
            echo "Waiting for instance to start..."
            sleep 10
            
            echo "Checking logs for errors..."
            cat logs/pm2.error.log
            echo "Output logs:"
            cat logs/pm2.out.log
            
            echo "Process status:"
            pm2 list
            
            # If single instance is running, scale up
            if pm2 list | grep "online" > /dev/null; then
              echo "Scaling to multiple instances..."
              pm2 scale cladbe_server 4
              sleep 10
              pm2 list
              
              # Check final status
              ONLINE_COUNT=$(pm2 list | grep "online" | wc -l)
              if [ "$ONLINE_COUNT" -eq 4 ]; then
                echo "All instances are online"
                pm2 save
                exit 0
              else
                echo "Failed to scale to all instances"
                exit 1
              fi
            else
              echo "Initial instance failed to start"
              exit 1
            fi
          ENDSSH
