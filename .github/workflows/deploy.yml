name: Deploy to Server

on:
  push:
    branches: [main]

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - name: Setup SSH
        env:
          SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}
        run: |
          mkdir -p ~/.ssh
          echo "$SSH_PRIVATE_KEY" > ~/.ssh/github_deploy
          chmod 600 ~/.ssh/github_deploy
          ssh-keyscan -H 80.65.208.176 >> ~/.ssh/known_hosts

      - name: Deploy
        run: |
          ssh -i ~/.ssh/github_deploy root@80.65.208.176 'bash -s' << 'ENDSSH'
            cd /root/cladbe_server

            # Backup .env file just in case
            cp .env .env.backup

            echo "Stashing changes except .env..."
            git stash push -- :/  # This stashes everything except untracked files (like .env)

            echo "Pulling latest changes..."
            git pull origin main

            # Verify .env is still there
            if [ ! -f .env ]; then
              echo "Restoring .env from backup..."
              cp .env.backup .env
            fi

            echo "Installing dependencies..."
            npm install --production

            echo "Stopping PM2..."
            pm2 kill || true
            rm -rf ~/.pm2
            pm2 update

            echo "Starting PM2 with all instances..."
            pm2 start ecosystem.config.js --env production

            echo "Waiting for instances to start..."
            sleep 20

            echo "Final process status:"
            pm2 list

            # Check if all 12 instances are online
            ONLINE_COUNT=$(pm2 list | grep "online" | wc -l)
            if [ "$ONLINE_COUNT" -eq 12 ]; then
              echo "All 12 instances are running successfully"
              pm2 save
              rm .env.backup  # Remove backup if everything is successful
              exit 0
            else
              echo "Not all instances are online (running: $ONLINE_COUNT)"
              echo "Checking PM2 logs..."
              pm2 logs --lines 20
              exit 1
            fi
          ENDSSH
